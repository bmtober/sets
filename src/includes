me=$(basename $0)

usage="

NAME
  ${me} - Test for subset. 

SYNOPSIS
  ${me} [OPTIONS] setA setB

DESCRIPTION
  ${me} returns exit value 0 if set B is a subset of set A.

OPTIONS
  -h  Displays help message.

  -v  Increase verbosity.

AUTHOR
  Implementation by Berend M. Tober based on article by Peteris Krumins at 

  http://www.catonmat.net/blog/set-operations-in-unix-shell/


"

checkscript ()
{
  # confirm that a script file is visible in path
  which "$1" &> /dev/null
  [ $? -ne 0 ]  && echo "$1 not found in path" && exit
}

checkscript "complement"

infile1=""
infile2="-"

while [[ $# -gt 0 ]]
do
  case "${1}" in
    -h)
      echo "${usage}"
      exit
      ;;
    -v)
      verbose=true
      ;;
    -*)
      echo "Invalid option '${1}'"
      exit
      ;;
    *)
      infile1="${1}"
      infile2="${2--}"
      shift 2
      ;;
  esac
  shift
done  


itemset=".${me}.$$"
trap '[ -f "${itemset}" ] && rm "${itemset}"' EXIT

cat "${infile2}" > "${itemset}"

[ -n "${verbose}" ] && echo "==> ${infile1} contains  ${infile2} <=="
[ $(complement "${itemset}" "${infile1}" | wc -l) -eq 0 ] 
result=$?
if [ -n "${verbose}" ]
then
  if [ $result == 0 ] 
  then
    echo "true"
  else
    echo "false"
  fi
fi  
exit $result
