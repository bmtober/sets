me=$(basename $0)

usage="

NAME
  ${me} - Lift of an association rule.

SYNOPSIS
  ${me} [OPTIONS] antecedent consequent

DESCRIPTION
  ${me} returns the lift an association between the antiecedent
        and the consequent.

OPTIONS
  -h  Displays help message.

  -d corpus
    Specifies the directory with the data base of transaction itemsets.
    Defaults to current directory or the CORPUS environment variable,
    if set.

AUTHOR
  Implementation by Berend M. Tober.

  Based on https://en.wikipedia.org/wiki/Association_rule_learning

"

checkscript ()
{
  # confirm that a script file is visible in path
  which "$1" &> /dev/null
  [ $? -ne 0 ]  && echo "$1 not found in path" && exit
}

checkscript "support"
checkscript "union"
checkscript "dc"

directory="./"

while [[ $# -gt 0 ]]
do
  case "${1}" in
    -h)
      echo "${usage}"
      exit
      ;;
    -d)
      shift
      CORPUS="${1}"
      [ ! -d "${CORPUS}" ] && echo "${CORPUS} is not a directory or not found." && exit 1
      ;;
    -*)
      echo "Invalid option '${1}'"
      exit
      ;;
    *)
      antecedent="${1}"
      consequent="${2}"
      shift 2
      ;;
  esac
  shift
done  

[ ! -f  "${antecedent}" ] && echo "Antecedent '${antecedent}' not found." && exit
[ ! -f  "${consequent}" ] && echo "Consequent '${consequent}' not found." && exit

tmpfile=".$(basename $0).$$"
trap 'rm "${tmpfile}"' EXIT
union "${antecedent}" "${consequent}" > "${tmpfile}"

numerator=$(support "${tmpfile}")
denominatorX=$(support "${antecedent}")
denominatorY=$(support "${consequent}")

dc <<< "10k$numerator $denominatorX $denominatorY */p"

